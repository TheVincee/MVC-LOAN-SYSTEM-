@model List<JJK.Entities.ClientsInfoTb>

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="container mt-4">
    <h3>List of Clients</h3>
    <a class="btn btn-success mb-3" href="../Main/Create">Create New</a>

    <table id="list-table" class="table table-striped" style="width:100%">
        <thead>
            <tr>
                <th>#</th>
                <th>User Type</th>
                <th>Full Name</th>
                <th>Age</th>
                <th>Address</th>
                <th>Zip Code</th>
                <th>Occupation</th>
                <th>Operation</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var client in Model)
            {
                <tr>
                    <td>@client.Id</td>
                    <td>@client.UserType</td>
                    <td>@client.FullName @client.LastName</td>
                    <td>@client.Age</td>
                    <td>@client.Address</td>
                    <td>@client.ZipCode</td>
                    <td>@client.Occupation</td>
                    <td>
                        <a href="/main/update/@client.Id" class="btn btn-sm btn-outline-primary"><i class="bi bi-pencil-square"></i></a>
                        <a href="/main/delete/@client.Id" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i></a>
                        <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#LoanModal" onclick="updateClientInfo('@client.Id', '@client.FullName @client.LastName')">
                            <i class="bi bi-currency-dollar"></i> Make Loan
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Loan Modal -->
    <div class="modal fade" id="LoanModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Loan for <span id="clientInfo"></span></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form action="./Controllers/Loan/Create" method="post">
                        <input type="hidden" id="clientId" name="clientId">
                        
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="clientName" class="form-label">Client</label>
                                <input type="text" class="form-control" id="clientName" name="clientName" readonly>
                            </div>
                            <div class="col-md-6">
                                <label for="status" class="form-label">Status</label>
                                <input type="text" class="form-control" id="status" name="status">
                            </div>
                        </div>

                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="amount" class="form-label">Amount</label>
                                <input type="number" class="form-control" id="amount" name="amount">
                            </div>
                            <div class="col-md-6">
                                <label for="noOfPayment" class="form-label">No of Payments</label>
                                <input type="number" class="form-control" id="noOfPayment" name="noOfPayment" onchange="calculateDueDate()">
                            </div>
                        </div>

                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="deduction" class="form-label">Deduction</label>
                                <input type="number" class="form-control" id="deduction" name="deduction">
                            </div>
                            <div class="col-md-6">
                                <label for="typeofPayment" class="form-label">Type</label>
                                <select id="typeofPayment" name="type" class="form-select" onchange="calculateDueDate()">
                                    <option value="0.1">Daily</option>
                                    <option value="0.3">Weekly</option>
                                    <option value="0.5">Monthly</option>
                                </select>
                            </div>
                        </div>

                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="interest" class="form-label">Interest</label>
                                <input type="number" class="form-control" id="interest" name="interest" readonly>
                            </div>
                            <div class="col-md-6">
                                <label for="dateCreated" class="form-label">Date Created</label>
                                <input type="date" class="form-control" id="dateCreated" name="dateCreated" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly>
                            </div>
                        </div>

                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="receivableAmount" class="form-label">Receivable Amount</label>
                                <input type="number" class="form-control" id="receivableAmount" name="receivableAmount" readonly>
                            </div>
                            <div class="col-md-6">
                                <label for="dueDate" class="form-label">Due Date</label>
                                <input type="date" class="form-control" id="dueDate" name="dueDate" readonly>
                            </div>
                        </div>

                        <div class="row g-3">
                            <div class="col-md-12">
                                <label for="payableAmount" class="form-label">Payable Amount</label>
                                <input type="number" class="form-control" id="payableAmount" name="payableAmount" readonly>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary mt-3">Submit</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    function updateClientInfo(clientId, clientName) {
        document.getElementById('clientId').value = clientId;
        document.getElementById('clientName').value = clientName;
        document.getElementById('clientInfo').textContent = clientName;
    }

    const typeSelect = document.getElementById('typeofPayment');
    const interestInput = document.getElementById('interest');
    const noOfPaymentInput = document.getElementById('noOfPayment');
    const deductionInput = document.getElementById('deduction');
    const amountInput = document.getElementById('amount');
    const receivableAmountInput = document.getElementById('receivableAmount');
    const payableAmountInput = document.getElementById('payableAmount');

    typeSelect.addEventListener('change', function() {
        const selectedType = parseFloat(this.value);
        let defaultInterest = 0;

        if (selectedType === 0.1) {
            defaultInterest = 0.01;
        } else if (selectedType === 0.3) {
            defaultInterest = 0.03;
        } else if (selectedType === 0.5) {
            defaultInterest = 0.05;
        }

        const calculatedInterest = defaultInterest;
        interestInput.value = calculatedInterest.toFixed(2);

        const noOfPayment = parseFloat(noOfPaymentInput.value);
        const amount = parseFloat(amountInput.value);
        const deduction = parseFloat(deductionInput.value);

        const receivableAmount = amount;
        receivableAmountInput.value = receivableAmount.toFixed(2);

        const interestAmount = amount * calculatedInterest * noOfPayment;
        const payableAmount = amount + interestAmount + deduction;
        payableAmountInput.value = payableAmount.toFixed(2);
    });

    function calculateDueDate() {
        const typeSelect = document.getElementById('typeofPayment');
        const noOfPaymentInput = document.getElementById('noOfPayment');
        const dueDateInput = document.getElementById('dueDate');

        const selectedType = parseFloat(typeSelect.value);
        const noOfPayment = parseInt(noOfPaymentInput.value);

        const currentDate = new Date();
        if (selectedType === 0.1) {
            currentDate.setDate(currentDate.getDate() + noOfPayment);
        } else if (selectedType === 0.3) {
            currentDate.setDate(currentDate.getDate() + noOfPayment * 7);
        } else if (selectedType === 0.5) {
            currentDate.setMonth(currentDate.getMonth() + noOfPayment);
        }
        dueDateInput.value = currentDate.toISOString().split('T')[0];
    }
</script>
